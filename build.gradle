plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.11'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

/* lombok 설정 추가 시작 */
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}
/* lombok 설정 추가 끝 */

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools' //캐시 같은 없을 없애서 재부팅없이 reloading 이 되게 만들어 준다.
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0' //query 변수의 내용을 보여주는 설정
	implementation 'org.springframework.boot:spring-boot-starter-validation'  //스프링부트 버전 2.3이상에서 @NotEmpty annotation 사용할 수 있게.
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5' //jackson 라이브러리는 기본적으로 이 프록시 객체를 json으로 어떻게 생성해야 하는지 몰라서 해결하기 위해.

	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.1.4'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	/* lombok 라이브러리 추가 시작 */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	/* Setting -> Annotation Processors -> Enable annotation Processing 체크(재시작) */
	/* lombok 라이브러리 추가 끝 */

	//runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //JUnit4 추가 --> default 가 JUnit5 인데 강의영상이 JUnit4 로 되어있어서.
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
